# Creating a user in M, V, C

First create a 'users' data source, with at least a primary key (id) and the fields
`username` and `password` (these could of course be renamed, but that requires more
configuration).

## The model

Create this file `app/models/User.php`
{{{
<?php

namespace app\models;

class User extends \lithium\data\Model {
}

User::applyFilter('save', function($self, $params, $chain){
	$document = $params['entity'];
	if (!$document->id) {
		$document->password = lithium\util\String::hash($document->password);
	}
	if (!empty($params['data'])) {
		$document->set($params['data']);
	}
	$params['entity'] = $document;
	return $chain->next($self, $params, $chain);
});

?>
}}}

## The Controller

Create this file : `app/controllers/UsersController`

{{{
<?php

namespace app\controllers;

use lithium\security\Auth;
use app\models\User;

class UsersController extends \lithium\action\Controller {

	public function index() {
		$users = User::all();
		return compact('users');
	}

	public function add() {
		$user = User::create($this->request->data);

		if (($this->request->data) && $user->save()) {
			return $this->redirect('Users::index');
		}
		return compact('user');
	}
}

?>
}}}

## The views

Create these files:

`app/views/users/add.html.php`

{{{
<h2>Add user</h2>
<?=$this->form->create($user); ?>
<?=$this->form->field('username'); ?>
<?=$this->form->field('password', array('type' => 'password')); ?>
<?=$this->form->submit('Create me'); ?>
<?=$this->form->end(); ?>
}}}

`app/views/users/index.html.php`

{{{
<h2>Users</h2>
<?php foreach ($users as $user) { ?>
	<?=$user->username; ?><br />
<?php } ?>
}}}
